[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=102]
code = "shader_type canvas_item;

uniform float lwc = 0.2; // line_width_constant
uniform float peri = 10.0;
uniform float inverse_speed = 2.;

uniform vec4 colour = vec4(1,0.95,0,1);

void fragment() {
	if ((UV.x > 1.0 - lwc ||UV.x < lwc || UV.y > 1.0 - 0.25 * lwc || UV.y < 0.25 * lwc) && mod(TIME - 10.0 - (UV.x + UV.y) * inverse_speed, peri) < 1.0) {
		COLOR = mix(colour, texture(TEXTURE, UV), mod(TIME - 10.0 - (UV.x + UV.y) * inverse_speed, peri));
		
	} else {
		COLOR = texture(TEXTURE, UV);
		
	}
}"

[resource]
shader = SubResource( 102 )
shader_param/lwc = 0.2
shader_param/peri = 120.0
shader_param/inverse_speed = 2.0
shader_param/colour = Plane( 1, 0.95, 0, 1 )
